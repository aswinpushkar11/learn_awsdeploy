[project]
name = "telegram-agent-aws"
version = "0.1.0"
description = "A multimodal Telegram Agent deployed to AWS Lambda"
readme = "README.md"
classifiers = [
    # TODO
]
license = {text = "MIT"}
dependencies = [
  "typer",
  "loguru",
  "pydantic",
  "pydantic-settings",
  "ipykernel",
  "langgraph>=0.6.10",
  "python-telegram-bot>=22.5",
  "pypdf>=6.1.1",
  "openai>=2.3.0",
  "elevenlabs>=2.17.0",
  "langchain-openai>=0.3.35",
  "langchain-core>=0.3.79",
  "langgraph-prebuilt>=0.6.4",
  "langchain-community>=0.3.31",
  "opik>=1.8.74",
  "langchain-qdrant>=0.2.1",
  "pillow>=11.3.0",
  "qdrant-client>=1.15.1",
  "litellm==1.76.1",
  "langgraph-checkpoint-mongodb>=0.2.1",
  "pymongo[srv]>=4.15.3",
  "certifi>=2025.10.5",
]
requires-python = ">= 3.10"

[dependency-groups]
dev = [
    "coverage",
    "pre-commit",
    "pytest",
    "ruff",
]

[project.scripts]
telegram_agent_aws = "telegram_agent_aws.cli:app"

[tool.ty]
# All rules are enabled as "error" by default; no need to specify unless overriding.
# Example override: relax a rule for the entire project (uncomment if needed).
# rules.TY015 = "warn"  # For invalid-argument-type, warn instead of error.

[tool.ruff]
line-length = 200

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # Pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
]

[tool.uv]
package = true
